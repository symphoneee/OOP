{"kind": "Listing", "data": {"modhash": "", "dist": 26, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Rules For Individuals\n---------------------\n\n* **Don't** create top-level comments - those are for employers.\n* Feel free to reply to top-level comments with **on-topic** questions.\n* I will create one top-level comment for **meta** discussion.\n* *New!* I will create another top-level comment for **individuals looking for work**. (This is an experiment; if successful, it will be continued.)\n\nRules For Employers\n---------------------\n\n* You must be hiring **directly**. No third-party recruiters.\n* **One** top-level comment per employer. If you have multiple job openings, that's great, but please consolidate their descriptions or mention them in replies to your own top-level comment.\n* **Don't** use URL shorteners. [reddiquette](https://www.reddit.com/wiki/reddiquette) forbids them because they're opaque to the spam filter.\n* Templates are awesome. Please **use** the following template. As the \"formatting help\" says, use \\*\\*two stars\\*\\* to **bold text**. Use empty lines to separate sections.\n\n---\n\n\\*\\*Company:\\*\\* [Company name; also, use the \"formatting help\" to make it a link to your company's website, or a specific careers page if you have one]\n\n&amp;nbsp;\n\n\\*\\*Type:\\*\\* [Full time, part time, internship, contract, etc.]\n\n&amp;nbsp;\n\n\\*\\*Description:\\*\\* [What does your company do, and what are you hiring C++ devs for? How much experience are you looking for, and what seniority levels are you hiring for? The more details you provide, the better]\n\n&amp;nbsp;\n\n\\*\\*Location:\\*\\* [Where's your office - or if you're hiring at multiple offices, list them. If your workplace language isn't English, please specify it]\n\n&amp;nbsp;\n\n\\*\\*Remote:\\*\\* [Do you offer the option of working remotely?]\n\n&amp;nbsp;\n\n\\*\\*Visa Sponsorship:\\*\\* [Does your company sponsor visas?]\n\n&amp;nbsp;\n\n\\*\\*Technologies:\\*\\* [Required: do you mainly use C++98/03, C++11, C++14, C++17, or the C++20 working draft? Optional: do you use Linux/Mac/Windows, are there languages you use in addition to C++, are there technologies like OpenGL or libraries like Boost that you need/want/like experience with, etc.]\n\n&amp;nbsp;\n\n\\*\\*Contact:\\*\\* [How do you want to be contacted? Email, reddit PM, telepathy, gravitational waves?]\n\n---\n\nPrevious Post\n--------------\n\n* [Who's Hiring C++ Devs - Q4 2018](https://www.reddit.com/r/cpp/comments/9kig88/whos_hiring_c_devs_q4_2018/)", "author_fullname": "t2_21c1y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ Jobs - Q1 2019", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_abh8bm", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 155, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 155, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": "", "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1546338793.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h2&gt;Rules For Individuals&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Don&amp;#39;t&lt;/strong&gt; create top-level comments - those are for employers.&lt;/li&gt;\n&lt;li&gt;Feel free to reply to top-level comments with &lt;strong&gt;on-topic&lt;/strong&gt; questions.&lt;/li&gt;\n&lt;li&gt;I will create one top-level comment for &lt;strong&gt;meta&lt;/strong&gt; discussion.&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;New!&lt;/em&gt; I will create another top-level comment for &lt;strong&gt;individuals looking for work&lt;/strong&gt;. (This is an experiment; if successful, it will be continued.)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Rules For Employers&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;You must be hiring &lt;strong&gt;directly&lt;/strong&gt;. No third-party recruiters.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;One&lt;/strong&gt; top-level comment per employer. If you have multiple job openings, that&amp;#39;s great, but please consolidate their descriptions or mention them in replies to your own top-level comment.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Don&amp;#39;t&lt;/strong&gt; use URL shorteners. &lt;a href=\"https://www.reddit.com/wiki/reddiquette\"&gt;reddiquette&lt;/a&gt; forbids them because they&amp;#39;re opaque to the spam filter.&lt;/li&gt;\n&lt;li&gt;Templates are awesome. Please &lt;strong&gt;use&lt;/strong&gt; the following template. As the &amp;quot;formatting help&amp;quot; says, use **two stars** to &lt;strong&gt;bold text&lt;/strong&gt;. Use empty lines to separate sections.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;**Company:** [Company name; also, use the &amp;quot;formatting help&amp;quot; to make it a link to your company&amp;#39;s website, or a specific careers page if you have one]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Type:** [Full time, part time, internship, contract, etc.]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Description:** [What does your company do, and what are you hiring C++ devs for? How much experience are you looking for, and what seniority levels are you hiring for? The more details you provide, the better]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Location:** [Where&amp;#39;s your office - or if you&amp;#39;re hiring at multiple offices, list them. If your workplace language isn&amp;#39;t English, please specify it]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Remote:** [Do you offer the option of working remotely?]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Visa Sponsorship:** [Does your company sponsor visas?]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Technologies:** [Required: do you mainly use C++98/03, C++11, C++14, C++17, or the C++20 working draft? Optional: do you use Linux/Mac/Windows, are there languages you use in addition to C++, are there technologies like OpenGL or libraries like Boost that you need/want/like experience with, etc.]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Contact:** [How do you want to be contacted? Email, reddit PM, telepathy, gravitational waves?]&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;Previous Post&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://www.reddit.com/r/cpp/comments/9kig88/whos_hiring_c_devs_q4_2018/\"&gt;Who&amp;#39;s Hiring C++ Devs - Q4 2018&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "MSVC STL Dev", "visited": false, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "abh8bm", "is_robot_indexable": true, "report_reasons": null, "author": "STL", "num_crossposts": 0, "num_comments": 116, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/cpp/comments/abh8bm/c_jobs_q1_2019/", "whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/cpp/comments/abh8bm/c_jobs_q1_2019/", "subreddit_subscribers": 80904, "created_utc": 1546338793.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_11r5qf3k", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Counting Bugs in Windows Calculator: analysis of the recently released source code", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b0760m", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 47, "domain": "habr.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 47, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552393440.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b0760m", "is_robot_indexable": true, "report_reasons": null, "author": "atomlib_com", "num_crossposts": 1, "num_comments": 1, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b0760m/counting_bugs_in_windows_calculator_analysis_of/", "whitelist_status": "all_ads", "stickied": false, "url": "https://habr.com/en/company/pvs-studio/blog/443400/", "subreddit_subscribers": 80904, "created_utc": 1552393440.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_jxx65", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Value category is not lifetime", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b02yz0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "domain": "quuxplusone.github.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 32, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552361485.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b02yz0", "is_robot_indexable": true, "report_reasons": null, "author": "d1ngal1ng", "num_crossposts": 0, "num_comments": 12, "send_replies": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b02yz0/value_category_is_not_lifetime/", "whitelist_status": "all_ads", "stickied": false, "url": "https://quuxplusone.github.io/blog/2019/03/11/value-category-is-not-lifetime/", "subreddit_subscribers": 80904, "created_utc": 1552361485.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_3dcwniyz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Introduction into Logging with Loguru", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b04brm", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "domain": "thoughts-on-cpp.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552370950.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b04brm", "is_robot_indexable": true, "report_reasons": null, "author": "bmahr", "num_crossposts": 0, "num_comments": 5, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b04brm/introduction_into_logging_with_loguru/", "whitelist_status": "all_ads", "stickied": false, "url": "https://thoughts-on-cpp.com/2019/03/12/introduction-into-logging-with-loguru/", "subreddit_subscribers": 80904, "created_utc": 1552370950.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Why can you not have this?\n\n`[]() constexpr`\n\n`{`\n\n  `constexpr static auto a {34}; // error: static variable not permitted in a constexpr function`\n\n  `return a;`\n\n`}`\n\nThe compiler should be able to transform the above code to something like this easily?\n\n`constexpr static auto a_secreatpassword {34}; // Global var now`\n\n`[]() constexpr`\n\n`{`\n\n`return a_secreatpassword;`\n\n`}`\n\nWhy did the standard committee close this door?\n\n&amp;#x200B;", "author_fullname": "t2_ank59", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "static variable not permitted in a constexpr function", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b04smy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552374679.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Why can you not have this?&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;[]() constexpr&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;{&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;constexpr static auto a {34}; // error: static variable not permitted in a constexpr function&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return a;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;The compiler should be able to transform the above code to something like this easily?&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;constexpr static auto a_secreatpassword {34}; // Global var now&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;[]() constexpr&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;{&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return a_secreatpassword;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Why did the standard committee close this door?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b04smy", "is_robot_indexable": true, "report_reasons": null, "author": "Nickreal03", "num_crossposts": 0, "num_comments": 11, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b04smy/static_variable_not_permitted_in_a_constexpr/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/b04smy/static_variable_not_permitted_in_a_constexpr/", "subreddit_subscribers": 80904, "created_utc": 1552374679.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_hoaut", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Lambdas: From C++11 to C++20, Part 2", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azt391", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 89, "domain": "bfilipek.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 89, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552308654.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azt391", "is_robot_indexable": true, "report_reasons": null, "author": "drodri", "num_crossposts": 0, "num_comments": 21, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azt391/lambdas_from_c11_to_c20_part_2/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.bfilipek.com/2019/03/lambdas-story-part2.html", "subreddit_subscribers": 80904, "created_utc": 1552308654.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_11pe86", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Here be frogs battling dragons", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azyjoe", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "domain": "manu343726.github.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552337207.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azyjoe", "is_robot_indexable": true, "report_reasons": null, "author": "vormestrand", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azyjoe/here_be_frogs_battling_dragons/", "whitelist_status": "all_ads", "stickied": false, "url": "https://manu343726.github.io/2019-03-11-here-be-frogs-battling-dragons/", "subreddit_subscribers": 80904, "created_utc": 1552337207.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "I've spent quite some time writing/generating/fixing a Clang compilation database (compile\\_commands.json) for a reasonable large cross compiled embedded c++ project. Now, when it's done, I'm using YouCompleteMe in vim and am very happy with it.\n\nBut, I'm guessing I can do so much more. What other tools exists that can utilize the compilation database? What tricks do you apply to your code or workflow?", "author_fullname": "t2_j8vkl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What can I do now that I have a complete compilation database? What are some good clang based tools or tricks?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azxutd", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 16, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 16, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552333849.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve spent quite some time writing/generating/fixing a Clang compilation database (compile_commands.json) for a reasonable large cross compiled embedded c++ project. Now, when it&amp;#39;s done, I&amp;#39;m using YouCompleteMe in vim and am very happy with it.&lt;/p&gt;\n\n&lt;p&gt;But, I&amp;#39;m guessing I can do so much more. What other tools exists that can utilize the compilation database? What tricks do you apply to your code or workflow?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azxutd", "is_robot_indexable": true, "report_reasons": null, "author": "bormen", "num_crossposts": 0, "num_comments": 18, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azxutd/what_can_i_do_now_that_i_have_a_complete/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/azxutd/what_can_i_do_now_that_i_have_a_complete/", "subreddit_subscribers": 80904, "created_utc": 1552333849.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Hey everyone, my name is Joseph and I'm a computer science major. I was just wondering if anyone had any useful snippets (along with explanations) they would care to share that they wish they had while learning c++.  ", "author_fullname": "t2_29hkdouf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Most useful c++ snippets of code", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b039xv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552363433.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone, my name is Joseph and I&amp;#39;m a computer science major. I was just wondering if anyone had any useful snippets (along with explanations) they would care to share that they wish they had while learning c++.  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b039xv", "is_robot_indexable": true, "report_reasons": null, "author": "josephhyatt", "num_crossposts": 0, "num_comments": 10, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b039xv/most_useful_c_snippets_of_code/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/b039xv/most_useful_c_snippets_of_code/", "subreddit_subscribers": 80904, "created_utc": 1552363433.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_jxx65", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Understanding C++ Modules: Part 1: Hello Modules, and Module Units", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_aznum0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 98, "domain": "vector-of-bool.github.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 98, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552271722.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "aznum0", "is_robot_indexable": true, "report_reasons": null, "author": "d1ngal1ng", "num_crossposts": 0, "num_comments": 72, "send_replies": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/aznum0/understanding_c_modules_part_1_hello_modules_and/", "whitelist_status": "all_ads", "stickied": false, "url": "https://vector-of-bool.github.io/2019/03/10/modules-1.html", "subreddit_subscribers": 80904, "created_utc": 1552271722.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "This is a little side project I've been working on to take the monotony out of parsing JSON in C++.\n\nI've been using it in other projects and find it quite useful.\n\nLet me know what you think, probably plenty to improve on, I've been tipping away at it whenever I get a chance.\n\nI'm always open to learn more.\n\nAt the moment you must install your own JSON library whether it be Qt , cpprest, or rapidjson.\n\n&amp;#x200B;\n\n[https://github.com/CathalT/Cerializer](https://github.com/CathalT/Cerializer)", "author_fullname": "t2_a3s06", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Easy JSON serialization/parsing", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azydr0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552336396.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is a little side project I&amp;#39;ve been working on to take the monotony out of parsing JSON in C++.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been using it in other projects and find it quite useful.&lt;/p&gt;\n\n&lt;p&gt;Let me know what you think, probably plenty to improve on, I&amp;#39;ve been tipping away at it whenever I get a chance.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m always open to learn more.&lt;/p&gt;\n\n&lt;p&gt;At the moment you must install your own JSON library whether it be Qt , cpprest, or rapidjson.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/CathalT/Cerializer\"&gt;https://github.com/CathalT/Cerializer&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azydr0", "is_robot_indexable": true, "report_reasons": null, "author": "CobraBeerIsDelicious", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azydr0/easy_json_serializationparsing/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/azydr0/easy_json_serializationparsing/", "subreddit_subscribers": 80904, "created_utc": 1552336396.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_6r4gbiq", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Calculating factorial of a number", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b05dyz", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552379801.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b05dyz", "is_robot_indexable": true, "report_reasons": null, "author": "davidkimolo", "num_crossposts": 0, "num_comments": 11, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b05dyz/calculating_factorial_of_a_number/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/davidkimolo/Factorial/blob/master/main.cpp", "subreddit_subscribers": 80904, "created_utc": 1552379801.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_11pe86", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Modern CMake Examples", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azife1", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 141, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 141, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552241362.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azife1", "is_robot_indexable": true, "report_reasons": null, "author": "vormestrand", "num_crossposts": 0, "num_comments": 21, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azife1/modern_cmake_examples/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/pr0g/cmake-examples#modern-cmake-examples", "subreddit_subscribers": 80904, "created_utc": 1552241362.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_1enu6tqt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Print last line comparing solutions", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_aztxu4", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "domain": "damaxi.github.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552313740.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "aztxu4", "is_robot_indexable": true, "report_reasons": null, "author": "damaxi1", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/aztxu4/print_last_line_comparing_solutions/", "whitelist_status": "all_ads", "stickied": false, "url": "https://damaxi.github.io/programming/notes/2019/03/19/print-last-line.html", "subreddit_subscribers": 80904, "created_utc": 1552313740.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_77nu9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The Parallel Hashmap: a novel hashmap with significant benefits.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azidri", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 35, "domain": "greg7mdp.github.io", "media_embed": {}, "author_flair_template_id": "7bf857c8-4dcc-11e6-b84d-0e5fbba92363", "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 35, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": "", "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552241130.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "C++ Dev", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azidri", "is_robot_indexable": true, "report_reasons": null, "author": "greg7mdp", "num_crossposts": 0, "num_comments": 27, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/cpp/comments/azidri/the_parallel_hashmap_a_novel_hashmap_with/", "whitelist_status": "all_ads", "stickied": false, "url": "https://greg7mdp.github.io/parallel-hashmap/", "subreddit_subscribers": 80904, "created_utc": 1552241130.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_11pe86", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Minimal Makefile, Maximum Outcome - C++ Edition", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azsgam", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "arvid.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552304481.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azsgam", "is_robot_indexable": true, "report_reasons": null, "author": "vormestrand", "num_crossposts": 0, "num_comments": 3, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azsgam/minimal_makefile_maximum_outcome_c_edition/", "whitelist_status": "all_ads", "stickied": false, "url": "https://arvid.io/2019/03/11/minimal-makefile-maximum-outcome-c-edition/", "subreddit_subscribers": 80904, "created_utc": 1552304481.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_5jen2mz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Inside Kdenlive: How to fuzz a complex GUI application?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azkgkv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "domain": "kdenlive.org", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552252083.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azkgkv", "is_robot_indexable": true, "report_reasons": null, "author": "f_r_d", "num_crossposts": 0, "num_comments": 4, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azkgkv/inside_kdenlive_how_to_fuzz_a_complex_gui/", "whitelist_status": "all_ads", "stickied": false, "url": "https://kdenlive.org/en/2019/03/inside-kdenlive-how-to-fuzz-a-complex-gui-application/", "subreddit_subscribers": 80904, "created_utc": 1552252083.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_u3bh3qs", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "autocmake: Convert an autotools project to CMake", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azj1bg", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552244605.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azj1bg", "is_robot_indexable": true, "report_reasons": null, "author": "traversaro", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azj1bg/autocmake_convert_an_autotools_project_to_cmake/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/fritzone/autocmake", "subreddit_subscribers": 80904, "created_utc": 1552244605.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Hello everyone. I am a cs undergrad and ive been just looking at some jobs in tech companies.\n I am a big fan of the football manager game and i would love to work in the company, sports interactive, that develops the game. \nI can see that they are programming almost everything in c++ and i kind of have the desire to continue learning the language. \nAt my university we have been working with C, but most of the time right now we have projects in python and java. I want to know how i can learn better cpp, what kind of projects should i do to be able to become a junior software engineer in c++. \nHow is it like to work with c++, as i know it is really powerful, but somehow languages like js, python, java are easier for me to learn and i find bigger job opportunities?", "author_fullname": "t2_toxk9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's it like to be a c++ software engineer?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azl9eo", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552256347.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone. I am a cs undergrad and ive been just looking at some jobs in tech companies.\n I am a big fan of the football manager game and i would love to work in the company, sports interactive, that develops the game. \nI can see that they are programming almost everything in c++ and i kind of have the desire to continue learning the language. \nAt my university we have been working with C, but most of the time right now we have projects in python and java. I want to know how i can learn better cpp, what kind of projects should i do to be able to become a junior software engineer in c++. \nHow is it like to work with c++, as i know it is really powerful, but somehow languages like js, python, java are easier for me to learn and i find bigger job opportunities?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azl9eo", "is_robot_indexable": true, "report_reasons": null, "author": "vilipche", "num_crossposts": 0, "num_comments": 20, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azl9eo/whats_it_like_to_be_a_c_software_engineer/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/azl9eo/whats_it_like_to_be_a_c_software_engineer/", "subreddit_subscribers": 80904, "created_utc": 1552256347.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "You can see source codes and tests here:\n\n[https://github.com/DimaBond174/cache\\_single\\_thread](https://github.com/DimaBond174/cache_single_thread)\n\n&amp;#x200B;\n\nIf you have your contender for the title of \"the fastest LRU/ARC cache algorithm\", then write in the comments links to the sources.  I will include them in testing..", "author_fullname": "t2_1vr19pix", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Fastest LRU/ARC-like (Adaptive Replacement Cache) algorithm in the world.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azo39i", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552273173.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;You can see source codes and tests here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DimaBond174/cache_single_thread\"&gt;https://github.com/DimaBond174/cache_single_thread&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;If you have your contender for the title of &amp;quot;the fastest LRU/ARC cache algorithm&amp;quot;, then write in the comments links to the sources.  I will include them in testing..&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azo39i", "is_robot_indexable": true, "report_reasons": null, "author": "bondarenkoda", "num_crossposts": 0, "num_comments": 3, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azo39i/fastest_lruarclike_adaptive_replacement_cache/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/azo39i/fastest_lruarclike_adaptive_replacement_cache/", "subreddit_subscribers": 80904, "created_utc": 1552273173.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "It seems that the biggest issue people have with the modules specification is the difficulty with mapping module names to appropriate files.\n\nIncludes don't have this issue, because you simply specify the exact file you want when you #include it. Why did modules go away from this solution? Would it not work well with the rest of the semantics?", "author_fullname": "t2_dvpio", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why don't module import statements specify a path to a file like #includes?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azdtsv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 32, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 32, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": "", "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552207242.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;It seems that the biggest issue people have with the modules specification is the difficulty with mapping module names to appropriate files.&lt;/p&gt;\n\n&lt;p&gt;Includes don&amp;#39;t have this issue, because you simply specify the exact file you want when you #include it. Why did modules go away from this solution? Would it not work well with the rest of the semantics?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "gamedev", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azdtsv", "is_robot_indexable": true, "report_reasons": null, "author": "miki151", "num_crossposts": 0, "num_comments": 59, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/cpp/comments/azdtsv/why_dont_module_import_statements_specify_a_path/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/azdtsv/why_dont_module_import_statements_specify_a_path/", "subreddit_subscribers": 80904, "created_utc": 1552207242.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "What if together with *#include \"file.cpp\"* the language would have something like *#include source \"file.cpp\"* ?\n\n    #include source \"file.cpp\"\n\nIncludes the file as a separate compilation unit rather than just inserting it in place as in case of existing #include.\n\nHaving such #include we may include libraries as simple as this:\n\n     #include source \"png.c\"\n\n     // where png.c file is just a list of all files from libpng:\n     #include source \"pngerror.c\"   \n     #include source \"pngpriv.c\"   \n     #include source \"pnggamma.c\"   \n     ...\n \nThis simple feature may eliminate the need of make, cmake, and pretty much all others from the zoo of makes. *#include source* and exiting C/C++ preprocessor should be enough in 90% of make cases. \n\nYet I think *#include source* can be used as a modules alternative.\n\nYet it is backward compatible - pretty much any exiting C/C++ library can be included that way in final executable without modification of library sources.\n", "author_fullname": "t2_ue34p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "#include source \"file.cpp\", why not?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_aznyvc", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552272431.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;What if together with &lt;em&gt;#include &amp;quot;file.cpp&amp;quot;&lt;/em&gt; the language would have something like &lt;em&gt;#include source &amp;quot;file.cpp&amp;quot;&lt;/em&gt; ?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include source &amp;quot;file.cpp&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Includes the file as a separate compilation unit rather than just inserting it in place as in case of existing #include.&lt;/p&gt;\n\n&lt;p&gt;Having such #include we may include libraries as simple as this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; #include source &amp;quot;png.c&amp;quot;\n\n // where png.c file is just a list of all files from libpng:\n #include source &amp;quot;pngerror.c&amp;quot;   \n #include source &amp;quot;pngpriv.c&amp;quot;   \n #include source &amp;quot;pnggamma.c&amp;quot;   \n ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This simple feature may eliminate the need of make, cmake, and pretty much all others from the zoo of makes. &lt;em&gt;#include source&lt;/em&gt; and exiting C/C++ preprocessor should be enough in 90% of make cases. &lt;/p&gt;\n\n&lt;p&gt;Yet I think &lt;em&gt;#include source&lt;/em&gt; can be used as a modules alternative.&lt;/p&gt;\n\n&lt;p&gt;Yet it is backward compatible - pretty much any exiting C/C++ library can be included that way in final executable without modification of library sources.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "aznyvc", "is_robot_indexable": true, "report_reasons": null, "author": "c-smile", "num_crossposts": 0, "num_comments": 32, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/aznyvc/include_source_filecpp_why_not/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/aznyvc/include_source_filecpp_why_not/", "subreddit_subscribers": 80904, "created_utc": 1552272431.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Out of curiosity: Is [STLport](http://www.stlport.org) or a derivative thereof  still maintained and/or in active use? \n\nBy active use I mean: Do you know of any applications that are still receiving feature upgrades that depend on it or at least regularly test against it.", "author_fullname": "t2_1jw7tmf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is STLport still alive?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_azea5k", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552212076.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Out of curiosity: Is &lt;a href=\"http://www.stlport.org\"&gt;STLport&lt;/a&gt; or a derivative thereof  still maintained and/or in active use? &lt;/p&gt;\n\n&lt;p&gt;By active use I mean: Do you know of any applications that are still receiving feature upgrades that depend on it or at least regularly test against it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "azea5k", "is_robot_indexable": true, "report_reasons": null, "author": "kalmoc", "num_crossposts": 0, "num_comments": 8, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/azea5k/is_stlport_still_alive/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/azea5k/is_stlport_still_alive/", "subreddit_subscribers": 80904, "created_utc": 1552212076.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_2tyem4c4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Code Generation with C++ Contracts", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_az428g", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 71, "domain": "gummif.github.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 71, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552142060.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "az428g", "is_robot_indexable": true, "report_reasons": null, "author": "gummifa", "num_crossposts": 0, "num_comments": 24, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/az428g/code_generation_with_c_contracts/", "whitelist_status": "all_ads", "stickied": false, "url": "http://gummif.github.io/blog/contract_code_gen.html", "subreddit_subscribers": 80904, "created_utc": 1552142060.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_auae5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A Possible Future of Embedded Software Development - Odin Holmes", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_az3rfh", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 28, "domain": "youtube.com", "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/fsMmh8F8uV0?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "A Possible Future of Embedded Software Development - Odin Holmes", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/fsMmh8F8uV0?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Meeting Cpp", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/fsMmh8F8uV0/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/MeetingCPP"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/fsMmh8F8uV0?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/az3rfh", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1552140021.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "Meeting C++ | C++ Evangelist", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "az3rfh", "is_robot_indexable": true, "report_reasons": null, "author": "meetingcpp", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/cpp/comments/az3rfh/a_possible_future_of_embedded_software/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=fsMmh8F8uV0", "subreddit_subscribers": 80904, "created_utc": 1552140021.0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "A Possible Future of Embedded Software Development - Odin Holmes", "type": "video", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/fsMmh8F8uV0?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Meeting Cpp", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/fsMmh8F8uV0/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/MeetingCPP"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "I created some next generation project templates that use the Meson build system. I decided to use Meson because it is a multi language codebase friendly tool, the syntax is understandable and it is readable.\n\nThese templates are only created as I need them mostly because I cant afford to jump into any rabbit holes by just making templates at random and not using them. I did some additional testing to make sure the templates where behaving properly.\n\nI will be incorporating the Conan package manager at some point so I can used it with C, C++ projects. I am also planing on making a template for the Arduino-UNO.\n\n**List of available project templates.**\n\n**C language:**\n\n\u2022 [**Basic Program**](https://github.com/squidfarts/cProgram2.git)\n\n\u2022 [**Practical project** ](https://github.com/squidfarts/cProject2.git)\n\n\u2022 [**Static library**](https://github.com/squidfarts/cLibrary2.git)\n\n**C++ language:**\n\n\u2022 [**Basic Program**](https://github.com/squidfarts/cppProgram2.git)\n\n\u2022 [**Practical project** ](https://github.com/squidfarts/cppProject2.git)\n\n\u2022 [**Static library**](https://github.com/squidfarts/cppLibrary2.git)\n\n**Objective-C language:**\n\n\u2022 [**Basic Program**](https://github.com/squidfarts/objcProgram2.git)\n\n**Rust language:**\n\n\u2022 [**Basic Program**](https://github.com/squidfarts/rsProgram2.git)\n\nIf there is anyway I can improve or an issue with the current work then I would love to know as it is better to hear that something is not working than assuming it works because it is possible for me to make examples if everything seems to checkout ok.", "author_fullname": "t2_frv2ein", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Meson project templates.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_az7qt7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1552163510.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I created some next generation project templates that use the Meson build system. I decided to use Meson because it is a multi language codebase friendly tool, the syntax is understandable and it is readable.&lt;/p&gt;\n\n&lt;p&gt;These templates are only created as I need them mostly because I cant afford to jump into any rabbit holes by just making templates at random and not using them. I did some additional testing to make sure the templates where behaving properly.&lt;/p&gt;\n\n&lt;p&gt;I will be incorporating the Conan package manager at some point so I can used it with C, C++ projects. I am also planing on making a template for the Arduino-UNO.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;List of available project templates.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;C language:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;\u2022 &lt;a href=\"https://github.com/squidfarts/cProgram2.git\"&gt;&lt;strong&gt;Basic Program&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;\u2022 &lt;a href=\"https://github.com/squidfarts/cProject2.git\"&gt;&lt;strong&gt;Practical project&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;\u2022 &lt;a href=\"https://github.com/squidfarts/cLibrary2.git\"&gt;&lt;strong&gt;Static library&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;C++ language:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;\u2022 &lt;a href=\"https://github.com/squidfarts/cppProgram2.git\"&gt;&lt;strong&gt;Basic Program&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;\u2022 &lt;a href=\"https://github.com/squidfarts/cppProject2.git\"&gt;&lt;strong&gt;Practical project&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;\u2022 &lt;a href=\"https://github.com/squidfarts/cppLibrary2.git\"&gt;&lt;strong&gt;Static library&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Objective-C language:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;\u2022 &lt;a href=\"https://github.com/squidfarts/objcProgram2.git\"&gt;&lt;strong&gt;Basic Program&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Rust language:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;\u2022 &lt;a href=\"https://github.com/squidfarts/rsProgram2.git\"&gt;&lt;strong&gt;Basic Program&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If there is anyway I can improve or an issue with the current work then I would love to know as it is better to hear that something is not working than assuming it works because it is possible for me to make examples if everything seems to checkout ok.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "link_flair_template_id": null, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "az7qt7", "is_robot_indexable": true, "report_reasons": null, "author": "asquidfarts", "num_crossposts": 0, "num_comments": 6, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/az7qt7/meson_project_templates/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/az7qt7/meson_project_templates/", "subreddit_subscribers": 80904, "created_utc": 1552163510.0, "media": null, "is_video": false}}], "after": "t3_az7qt7", "before": null}}